# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dotTEST:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: PROTO Run dotTEST analyzer
        id: dottest
        # You may pin to the exact commit or the version.
        # uses: tobyash86/run-dottest-analyzer-proto@1bc4be095189f455793afdb10b47127e06ae25ff
        uses: tobyash86/run-dottest-analyzer-proto@prda0.1.6a
        with:
          # Path to solution(s) to be analyzed. Specify multiple times to analyze many solutions. Supports ANT-style wildcards.
          solution: .\BankExample\BankExample.sln
          # An URL of test configuration to be used for analysis
          config: builtin://Recommended Rules
          # Fails the command with exit code 2 if any findings are reported.
          fail: false

      # ---------------------------------------------------------------
      # Archive the findings reports as job artifact
      - name: Upload report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Report files
          path: ${{ steps.dottest.outputs.report }}/*.*

      # ---------------------------------------------------------------
      # Upload the findings into the GitHub code scanning alert section
      - name: Upload results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.dottest.outputs.report }}/report.sarif
